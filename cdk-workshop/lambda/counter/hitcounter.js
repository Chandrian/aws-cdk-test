"use strict";
const { DynamoDB, Lambda } = require('aws-sdk');
exports.handler = async function (event) {
    console.log("request:", JSON.stringify(event, undefined, 2));
    // create AWS SDK clients
    const dynamo = new DynamoDB();
    const lambda = new Lambda();
    // update dynamo entry for "path" with hits++
    await dynamo.updateItem({
        TableName: process.env.HITS_TABLE_NAME,
        Key: { path: { S: event.path } },
        UpdateExpression: 'ADD hits :incr',
        ExpressionAttributeValues: { ':incr': { N: '1' } }
    }).promise();
    // call downstream function and capture response
    const resp = await lambda.invoke({
        FunctionName: process.env.DOWNSTREAM_FUNCTION_NAME,
        Payload: JSON.stringify(event)
    }).promise();
    console.log('downstream response:', JSON.stringify(resp, undefined, 2));
    // return response back to upstream caller
    return JSON.parse(resp.Payload);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGl0Y291bnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhpdGNvdW50ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRWhELE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxXQUFVLEtBQVU7SUFDdkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFN0QseUJBQXlCO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7SUFDOUIsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQztJQUU1Qiw2Q0FBNkM7SUFDN0MsTUFBTSxNQUFNLENBQUMsVUFBVSxDQUFDO1FBQ3BCLFNBQVMsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWU7UUFDdEMsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUNoQyxnQkFBZ0IsRUFBRSxnQkFBZ0I7UUFDbEMseUJBQXlCLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUU7S0FDckQsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBRWIsZ0RBQWdEO0lBQ2hELE1BQU0sSUFBSSxHQUFHLE1BQU0sTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUM3QixZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0I7UUFDbEQsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO0tBQ2pDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUViLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFeEUsMENBQTBDO0lBQzFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBEeW5hbW9EQiwgTGFtYmRhIH0gPSByZXF1aXJlKCdhd3Mtc2RrJyk7XG5cbmV4cG9ydHMuaGFuZGxlciA9IGFzeW5jIGZ1bmN0aW9uKGV2ZW50OiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZyhcInJlcXVlc3Q6XCIsIEpTT04uc3RyaW5naWZ5KGV2ZW50LCB1bmRlZmluZWQsIDIpKTtcblxuICAgIC8vIGNyZWF0ZSBBV1MgU0RLIGNsaWVudHNcbiAgICBjb25zdCBkeW5hbW8gPSBuZXcgRHluYW1vREIoKTtcbiAgICBjb25zdCBsYW1iZGEgPSBuZXcgTGFtYmRhKCk7XG5cbiAgICAvLyB1cGRhdGUgZHluYW1vIGVudHJ5IGZvciBcInBhdGhcIiB3aXRoIGhpdHMrK1xuICAgIGF3YWl0IGR5bmFtby51cGRhdGVJdGVtKHtcbiAgICAgICAgVGFibGVOYW1lOiBwcm9jZXNzLmVudi5ISVRTX1RBQkxFX05BTUUsXG4gICAgICAgIEtleTogeyBwYXRoOiB7IFM6IGV2ZW50LnBhdGggfSB9LFxuICAgICAgICBVcGRhdGVFeHByZXNzaW9uOiAnQUREIGhpdHMgOmluY3InLFxuICAgICAgICBFeHByZXNzaW9uQXR0cmlidXRlVmFsdWVzOiB7ICc6aW5jcic6IHsgTjogJzEnIH0gfVxuICAgIH0pLnByb21pc2UoKTtcblxuICAgIC8vIGNhbGwgZG93bnN0cmVhbSBmdW5jdGlvbiBhbmQgY2FwdHVyZSByZXNwb25zZVxuICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBsYW1iZGEuaW52b2tlKHtcbiAgICAgICAgRnVuY3Rpb25OYW1lOiBwcm9jZXNzLmVudi5ET1dOU1RSRUFNX0ZVTkNUSU9OX05BTUUsXG4gICAgICAgIFBheWxvYWQ6IEpTT04uc3RyaW5naWZ5KGV2ZW50KVxuICAgIH0pLnByb21pc2UoKTtcblxuICAgIGNvbnNvbGUubG9nKCdkb3duc3RyZWFtIHJlc3BvbnNlOicsIEpTT04uc3RyaW5naWZ5KHJlc3AsIHVuZGVmaW5lZCwgMikpO1xuXG4gICAgLy8gcmV0dXJuIHJlc3BvbnNlIGJhY2sgdG8gdXBzdHJlYW0gY2FsbGVyXG4gICAgcmV0dXJuIEpTT04ucGFyc2UocmVzcC5QYXlsb2FkKTtcbn07XG4iXX0=